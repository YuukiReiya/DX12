#include "ShaderCommon.hlsli"

// 最低限文明的なピクセルシェーダ
// 関数名の後ろにある「:SV_TARGET」は戻り値の内容の用途を指示してる。
// セマンティクスだね。

// ピクセルシェーダの仕事の流れのイメージ
// 前段階
// - 頂点シェーダでポリゴンの頂点を処理
// - 3頂点でできたポリゴンで塗りつぶすピクセルを決める(ラスタライズ)
// - ラスタライズ時のピクセルの位置をもとに、頂点シェーダでの戻り値の内容が
//   自動的に補間処理される(三角形の色が勝手に保管されるのこれのおかげです)
// - 補完された値がピクセルシェーダの引数になる
//
// 1. ラスタライズ後に1ピクセル毎にピクセルシェーダが起動
// 2. シェーダ内で引数やアプリケーションからの値をもとに色を計算
// 3. 結果をレンダーターゲットにreturnして1ピクセルの色がきまる

// 頂点シェーダから入ってくるVSOut型の引数から色を取り出し
// レンダーターゲットに出力する1ピクセルの色を決めます
float4 main(VSInput pIn) : SV_Target
{
	return pIn.color;
}
